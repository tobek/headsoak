extends header

block content

  //- we can call focus on this in order to blur all
  input#blur-hack(style="position: absolute; opacity: 0;")

  div#bg-image

  div#modalclickoff(ng-click="m.cancelModal()", ng-show="m.modal")
  div.modal.modaloff(ng-class="{modalon: m.modal, modaloff: !m.modal, 'large-circle': m.modalLarge }", ng-click="m.cancelModal()")
    h1#title(ng-show="!u.loggedIn") nutmeg
    div.circle-holder
      a#close-modal(ng-click="m.cancelModal()", ng-show="u.loggedIn && !m.lockedOut") x
      div.circle(ng-click="$event.stopPropagation()")

        div(ng-show="m.modal == 'about'")
          h3 about
          p The <b>nutmeg</b> tree is any of several species of trees in genus <b>Myristica</b>. The nutmeg tree is important for two spices derived from the fruit: nutmeg and mace.

        div.shortcuts(ng-show="m.modal == 'shortcuts'")
          h3 shortcuts
          p.shortcut-modkey
            label modifier key: 
              input(type="text", ng-model="s.modEditing")
              | 
              span.tooltip(data-tooltip="This will prefix all of these shortcuts. Your options are:\n\n- 'ctrl'\n- 'shift'\n- 'alt'\n- 'option'\n- 'command' (only on Mac)\n- 'meta' (doesn't work?)\n- 'mod' ('ctrl' on a PC, 'command' on a Mac).\n\nYou can also combine them, e.g. 'ctrl+shift', or leave blank to control different shortcuts separately.")
                i.fa.fa-info-circle.fa-lg
          table
            thead
              tr
                th Action
                th Shortcut 
                  span.tooltip(data-tooltip="Simply type in a letter or symbol, or one of the following: backspace, tab, enter, return, capslock, esc, escape, space, pageup, pagedown, end, home, left, up, right, down, ins, del\n\nYou may include modifier keys in here too, e.g. 'shift+alt+backspace'")
                    i.fa.fa-info-circle
            tbody
              tr(ng-repeat="shortcut in s.shortcutsEditing", ng-show="!shortcut.overkill")
                td {{shortcut.name}} 
                  span.tooltip(ng-show="shortcut.description", ng-attr-data-tooltip="{{shortcut.description}}")
                    i.fa.fa-info-circle
                td
                  label
                    span(ng-show="s.modEditing") {{s.modEditing}}+
                    input(type="text", ng-model="shortcut.binding")
          p
            i Note: Different browsers and operating systems handle web site shortcuts differently. You might find that some combinations don't work.
          div.button-holder
            input(type="submit", value="cancel", ng-click="s.cancel()")
            input(type="submit", value="defaults", ng-click="s.revert()")
            input(type="submit", value="save", ng-click="s.save()")

        div.settings(ng-show="m.modal == 'settings'")
          h3 settings
          table
            tbody
              tr(ng-repeat="(setting, val) in c.config", ng-show="c.info[setting].section == 'settings' && !c.info[setting].overkill")
                td {{c.info[setting].humanName}} 
                  span.tooltip(ng-show="c.info[setting].description", ng-attr-data-tooltip="{{c.info[setting].description}}")
                    i.fa.fa-info-circle
                td
                  label
                    //- for ng-model we can't use `val`, see https://github.com/angular/angular.js/wiki/Understanding-Scopes
                    input(type="checkbox", ng-model="c.config[setting]")
          div.button-holder
            input(type="submit", value="cancel", ng-click="c.cancel('settings')")
            input(type="submit", value="defaults", ng-click="c.revert('settings')")
            input(type="submit", value="save", ng-click="c.save()")

        div.account(ng-show="m.modal == 'account'")
          h4 {{ u.displayNameSet ? 'change display name' : 'set display name' }}
            span.tooltip-holder
              span.tooltip(data-tooltip="Your display name is visible to others if you share any notes. It does not have to be unique and may contain any character.")
                i.fa.fa-info-circle
          form(ng-submit="u.changeDisplayName(u.user.displayName)")
            input(type="text", ng-model="u.user.displayName", placeholder="{{::u.displayNamePlaceholder}}")
            br
            input(type="submit", value="{{ u.displayNameSet ? 'change name' : 'set name' }}")

          h4 change password
          form(ng-submit="u.changePassword()")
            input(type="password", placeholder="current password", ng-model="u.password")
            br
            input(type="password", placeholder="new password", ng-model="u.newPass1")
            br
            input(type="password", placeholder="repeat new password", ng-model="u.newPass2")
            br
            input(type="submit", value="change password")
            br

          h4 change email
          p To change the email address associated with your account, please email <a href="mailto:support@nutmeg.io">support@nutmeg.io</a> and we'll get you sorted.

        div.layout(ng-show="m.modal == 'layout'")
          h3 layout
          table
            tbody
              tr(ng-repeat="(setting, val) in c.config", ng-show="c.info[setting].section == 'layout' && !c.info[setting].overkill")
                td {{c.info[setting].humanName}} 
                  span.tooltip(ng-show="c.info[setting].description", ng-attr-data-tooltip="{{c.info[setting].description}}")
                    i.fa.fa-info-circle
                td
                  label
                    //- for ng-model we can't use `val`, see https://github.com/angular/angular.js/wiki/Understanding-Scopes
                    input(type="checkbox", ng-model="c.config[setting]")
          div.button-holder
            input(type="submit", value="cancel", ng-click="c.cancel('layout')")
            input(type="submit", value="defaults", ng-click="c.revert('layout')")
            input(type="submit", value="save", ng-click="c.save()")

        div.feedback(ng-show="m.modal == 'feedback'")
          h3 feedback 
          //- if submitFeedback() returns true, clear fields and close modal
          form(ng-submit="submitFeedback(feedback, name) && ((feedback='') || (name='') || m.closeModal())")
            textarea(placeholder="Bug reports and suggestions are eagerly awaited. You'll hear from me personally.", ng-model="feedback")
            input(type="text", placeholder="name (optional)", ng-model="name")
            input(type="submit", value="submit")

        div.login(ng-show="m.modal == 'login'")
          h3 log in
          form(ng-submit="u.login(u.email, u.password);")
            input(type="email", placeholder="email", ng-model="u.email")
            input(type="password", placeholder="password", ng-model="u.password")
            input(type="submit", value="go", ng-hide="u.loading")
            p.loader(ng-show="u.loading")
              img(src="/img/loader-white.gif")
          p 
            a(ng-click="u.forgotPassword()") forgot password?
          p or 
            a(ng-click="m.modal='createaccount'") create an account

        div.create-account(ng-show="m.modal == 'createaccount'")
          form(ng-submit="u.createAccount(u.email, u.pass1, u.pass2);")
            h3 create an account
            input(type="email", placeholder="email", ng-model="u.email")
            input(type="password", placeholder="password", ng-model="u.pass1")
            input(type="password", placeholder="password again", ng-model="u.pass2")
            input(type="submit", value="go", ng-hide="u.loading")
            p.loader(ng-show="u.loading")
              img(src="/img/loader-white.gif")

        div.dynamic(ng-show="m.modal == 'dynamic'")
          h3(ng-show="m.dynamic.title") {{ m.dynamic.title }}

          div.custom-body(ng-bind-html="m.dynamic.bodyHTML", ng-show="m.dynamic.bodyHTML")
          p(ng-show="m.dynamic.message") {{ m.dynamic.message }}

          form(ng-submit="m.finishModal(m.dynamic.inputVal)")
            input(type="password", ng-show="m.dynamic.passwordInput", ng-model="m.dynamic.inputVal")
            input(type="text", ng-show="m.dynamic.textInput", placeholder="{{ m.dynamic.placeholder }}", ng-model="m.dynamic.inputVal")
            //- slightly byzantine rules for whether ng-submit gets called means that since we have more than one input, a submit button has to be here in order for `enter` in an input field to call ng-submit: https://docs.angularjs.org/api/ng/directive/form#submitting-a-form-and-preventing-the-default-action
            input(type="submit", ng-hide="true")

          div.prog-tag-editor(ng-show="m.dynamic.progTag")
            pre function(note) {
            pre#prog-tag-editor-field
            pre }

          div.button-holder
            input(type="submit", value="{{ m.dynamic.okText || 'ok' }}", ng-click="m.finishModal(m.dynamic.inputVal)", ng-show="m.dynamic.ok || m.dynamic.okText")
            input(type="submit", value="{{ m.dynamic.cancelText || 'cancel' }}", ng-click="m.cancelModal()", ng-show="m.dynamic.cancel || m.dynamic.cancelText")
            input(type="submit", value="{{ m.dynamic.thirdButton }}", ng-click="m.dynamic.thirdButtonCb()", ng-show="m.dynamic.thirdButton")

        div.working-overlay(ng-class="{working: m.working}")
          div.inner
            img.logo(src="/img/nutmeg100h-white.png", alt="nutmeg")

  div#full-page-loading.modal.modalon(ng-show="u.loggedIn && u.loading && ! u.loggingIn")
    div.circle-holder
        div.circle
          div.inner
            img.logo(src="/img/nutmeg100h-white.png", alt="nutmeg")


  div#nonmodal(ng-class="{modalon: m.modal, loggedout: !u.loggedIn}", ng-show="u.loggedIn && ! u.loading", ng-cloak)

    span#sync-status.tooltip(ng-class="digest.status", ng-attr-data-tooltip="Notes {{digest.status}}")
      i.cloud.fa.fa-cloud-upload

    div#menu
      ul
        li(ng-click="m.modal='about'") about 
          i.fa.fa-fw.fa-info-circle
        li(ng-click="m.modal='feedback'") feedback 
          i.fa.fa-fw.fa-comment-o
        li.incomplete export 
          i.fa.fa-fw.fa-share-square-o
        li.incomplete importer 
          i.fa.fa-fw.fa-download
        li(ng-click="m.modal='layout'; c.backup('layout')") layout 
          i.fa.fa-fw.fa-list.fa-flip-horizontal
        li(ng-click="m.modal='shortcuts'; m.modalLarge=true") shortcuts 
          i.fa.fa-fw.fa-keyboard-o
        li(ng-click="m.modal='sharing'; m.modalLarge=true") sharing 
          i.fa.fa-fw.fa-users
        li.private-mode.tooltip.on-left(ng-click="p.togglePrivateMode()", ng-class="p.privateMode ? 'on' : ''", ng-attr-data-tooltip="private notes currently {{ p.privateMode ? 'visible' : 'hidden' }}, click to {{ p.privateMode ? 'hide' : 'show' }}") private mode 
          i.fa.fa-fw.fa-unlock-alt
          i.fa.fa-fw.fa-lock
        li(ng-click="m.modal='settings'; m.modalLarge=true; c.backup('settings')") settings 
          i.fa.fa-fw.fa-gears
        li(ng-show="u.loggedIn", ng-click="m.modal='account'; m.modalLarge=true") account
          i.fa.fa-fw.fa-user
        li(ng-show="u.loggedIn", ng-click="u.auth.logout()") log out 
          i.fa.fa-fw.fa-power-off
        li(ng-show="!u.loggedIn", ng-click="m.modal='login'") log in 
          i.fa.fa-fw.fa-sign-in
      img#menuimage(src="/img/nutmeg40h.png", alt="nutmeg")

    div#query
      div.inner
        div.search-bar
          div.flex-container
            i.fa.fa-search(ng-click="q.focus()")
            span.private-mode.chiclet(ng-show="p.privateMode", ng-click="p.togglePrivateMode()")
              | private mode
              span.hover-cover
                i.fa.fa-times
            span.tags
              span.tag.chiclet(ng-repeat="tagId in q.tags", ng-click="q.removeTag(tagId)")
                | {{t.tags[tagId].name}}
                span.hover-cover
                  i.fa.fa-times
            input.search-input.flex.mousetrap(type="text", placeholder="search notes", ng-model="q.query", nm-query="q.query", tabindex=1, ng-focus="q.setupAutocomplete()")
            span.clear-query(ng-click="q.clear()")
              i.fa.fa-times

        div.nut-control
          div
            span.count {{n.countShownNuts()}}
            span#new-nut(title="New note", ng-click="n.createNut({})")
              i.fa.fa-plus
          div.sort
            label(for="nut-sort-select") Sort
            select#nut-sort-select(ng-change='n.sortNuts(n.sortOpts[c.config.nutSortBy]); c.pushNutSortBy()', ng-model='c.config.nutSortBy', ng-options='key as val.name for (key, val) in n.sortOpts', tabindex=3)
            //- @TODO there isn't really space for refresh button so commenting out. but that leaves no way to re-sort by current criteria (since change event doesn't fire unless selected option changes). either a) some hack with click and focusout events, b) put refresh button back in, or c) don't care (if user really wants to, they can select a different option then go back), and/or d) keyboard shortcut
            //- i.fa.fa-refresh(ng-click='q.doQuery();')

    div#main(ng-class="{'hide-tag-browser': !c.config.showTagBrowser}")

      div#left
        div#nuts
          ul
            li.nut(ng-repeat="nut in n.nutsDisplay | limitTo: n.nutsLimit", id="nut-{{nut.id}}")
              nm-nut

      div#right
        div#tagContainer
          div.header
            div
              span.tag-count {{ _.keys(t.tags).length }} tag{{ _.keys(t.tags).length === 1 ? '' : 's' }}
              span#new-tag(title="New tag", ng-click="t.creatingTag=true;")
                i.fa.fa-plus

            div.tag-search
              i.fa.fa-search(ng-click="t.focusOnSearch = true")
              input#tag-search-input.mousetrap(type="text", placeholder="search tags", ng-model="tagQuery", nm-focus="t.focusOnSearch")
              span.clear-field(ng-click="tagQuery = ''")
                i.fa.fa-times

            div.tag-sort
              label Sort
                select(ng-change="c.pushTagSortBy()", ng-model="c.config.tagSortBy", ng-options="key as val.name for (key, val) in t.sortOpts")

          ul#taglist
            li.tag.new-tag(ng-show="t.creatingTag")
              form(ng-submit="t.createTag({name: t.createTagName})")
                input(type="text", ng-model="t.createTagName", ng-blur="t.creatingTag=false; t.createTagName='';" nm-focus="t.creatingTag", placeholder="tag name")
            nm-tag(ng-init="", ng-repeat="tag in t.tags | orderObjectBy:t.sortOpts[c.config.tagSortBy].field:t.sortOpts[c.config.tagSortBy].rev track by $index", ng-hide="!tag", ng-show="!tagQuery || tag.name.toLowerCase().indexOf(tagQuery.toLowerCase()) !== -1")
