extends header

block content

  //- only remove modal on click if logged in - otherwise we're closing the login window on a blank screen
  div#modalclickoff(ng-click="!u.loggedIn || (m.modal = false)", ng-show="m.modal")
  div#modal.modaloff(ng-class="{modalon: m.modal, modaloff: !m.modal}", ng-click="!u.loggedIn || (m.modal = false)")
    div#circle-holder
      a#close-modal(ng-click="m.modal = false", ng-show="u.loggedIn") x
      div.circle(ng-click="$event.stopPropagation()")

        div(ng-show="m.modal == 'about'")
          h3 about
          p The <b>nutmeg</b> tree is any of several species of trees in genus <b>Myristica</b>. The nutmeg tree is important for two spices derived from the fruit: nutmeg and mace.

        div.feedback(ng-show="m.modal == 'feedback'")
          h3 feedback 
          //- if submitFeedback() returns true, clear fields and close modal
          form(ng-submit="submitFeedback(feedback, name) && ((feedback='') || (name='') || (m.modal = false))")
            textarea(placeholder="Bug reports and suggestions are eagerly awaited. You'll hear from me personally.", ng-model="feedback")
            input(type="text", placeholder="name (optional)", ng-model="name")
            input(type="submit", value="submit")

        div(ng-show="m.modal == 'login'")
          h3 log in
          form(ng-submit="u.login(email, password)")
            input(type="email", placeholder="email", ng-model="email")
            input(type="password", placeholder="password", ng-model="password")
            input(type="submit", value="go", ng-hide="u.loading")
            p.loader(ng-show="u.loading")
              img(src="/img/loader-white.gif")
          p or 
            a(ng-click="m.modal='createaccount'") create an account

        div(ng-show="m.modal == 'createaccount'")
          form(ng-submit="u.createAccount(email, pass1, pass2)")
            h3 create an account
            input(type="email", placeholder="email", ng-model="email")
            input(type="password", placeholder="password", ng-model="pass1")
            input(type="password", placeholder="password again", ng-model="pass2")
            input(type="submit", value="go", ng-hide="u.loading")
            p.loader(ng-show="u.loading")
              img(src="/img/loader-white.gif")


  div#nonmodal(ng-class="{modalon: m.modal, loggedout: !u.loggedIn}", ng-cloak)

    span#sync-status(ng-class="digest.status")
      i.cloud.fa.fa-cloud-upload
      i.spinner.fa.fa-refresh.fa-spin;


    div#menu
      ul
        li(ng-click="m.modal='about'") about
        li(ng-click="m.modal='feedback'") feedback
        li.incomplete export
        li.incomplete importer
        li.incomplete shortcuts
        li.incomplete settings
        li.incomplete(ng-show="u.loggedIn") account
        li(ng-show="u.loggedIn", ng-click="u.auth.logout()") log out
        li(ng-show="!u.loggedIn", ng-click="m.modal='login'") log in
      h1#title nutmeg

    div#query
      img(src="/img/nutmeg40h.png")
      input(type="text", placeholder="search", ng-model="q.query", nm-query="q.query")
      span.clear-query(ng-click="q.query=''")
        i.fa.fa-times

    //- can add .tab-hidden
    div#main

      div#left
        div#nuts
          div.header
            span#new-nut(ng-click="n.createNut({})")
              i.fa.fa-plus
            span.sort
              label Sort by 
                select#nut-sort-select(ng-model='n.sortBy', ng-options='o as o.name for o in n.sortOpts')

          ul
            //- ng-show="nut && [...]" to avoid showing undefined nuts (happens when deleting nuts and resulting sparse arrays)
            li.nut(ng-repeat="nut in n.nuts | orderBy:n.sortBy.field:n.sortBy.rev track by $index", ng-show="nut && (q.showAll || q.showNuts.indexOf(nut.id) !== -1)")
              div.tags
                span.add-tag-to-nut(ng-click="addingTag=true;")
                  i.fa.fa-plus
                span.tag(ng-show="addingTag")
                  form(ng-submit="n.addTagNameToNut(n.addTagName, nut); n.addTagName = ''; addingTag=false")
                    input(type="text", ng-model="n.addTagName", ng-blur="n.addTagName = ''; addingTag=false;", nm-focus="addingTag")
                span.tag(ng-repeat="tagId in nut.tags") {{t.tags[tagId].name}}
                  span.tracker {{t.tags[tagId].tracker ? nut.id : ''}} 
                  span.delete(ng-click="n.removeTagIdFromNut(tagId, nut.id)")
                    i.fa.fa-times
              div.clear
              div.tawrapper
                div.icons
                  a.time.tooltip(ng-attr-data-tooltip='{{"created: " + (nut.created | date:"medium") + "\nmodified: " + (nut.modified | date:"medium")}}')
                    i.fa.fa-clock-o
                  a.delete(ng-click="n.deleteNut(nut)")
                    i.fa.fa-trash-o
                textarea(ng-model="nut.body", ng-blur="n.nutBodyUpdated(nut)", ng-keydown="n.autosizeNut($event.target)")

      div#right
        div#tagContainer
          i.fa.fa-tags
          span#new-tag(ng-click="t.creatingTag=true;")
            i.fa.fa-plus
          br
          span.sort
            label Sort by 
              select(ng-model='t.sortBy', ng-options='o as o.name for o in t.sortOpts')
          input(type="text", placeholder="search")
          i.fa.fa-cog.show-tag-options(ng-click="showOptions = showOptions ? false : true", ng-class="{on: showOptions}")

          ul#taglist(ng-class="{'show-options': showOptions}")
            li.tag.new-tag(ng-show="t.creatingTag")
              form(ng-submit="t.createTag({name: t.createTagName})")
                input(type="text", ng-model="t.createTagName", ng-blur="t.creatingTag=false; t.createTagName='';" nm-focus="t.creatingTag")
            li.tag(ng-repeat="tag in t.tags | orderBy:t.sortBy.field:t.sortBy.rev track by $index", ng-click="q.query = tag.name + ' '", ng-hide="!tag")
              {{tag.name}} ({{tag.docs ? tag.docs.length : 0}}) 
              span.icons
                a.delete(ng-click="t.deleteTag(tag); $event.stopPropagation()")
                  i.fa.fa-trash-o
                a.edit(ng-click="t.editTag(tag); $event.stopPropagation()")
                  i.fa.fa-pencil
                a.toggle(ng-class="{on: tag.tracker}", ng-click="tag.tracker = tag.tracker ? null : true; t.tagUpdated(tag.id); $event.stopPropagation()")
                  i.fa.fa-eye
                a.toggle(ng-class="{on: tag.private}", ng-click="tag.private = tag.private ? null : true; t.tagUpdated(tag.id); $event.stopPropagation()")
                  i.fa.fa-lock
                  i.fa.fa-unlock-alt
