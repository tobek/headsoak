extends header

block content

  // we can call focus on this in order to blur all
  input#blur-hack(style="position: absolute; opacity: 0;")

  //- only remove modal on click if logged in - otherwise we're closing the login window on a blank screen
  div#modalclickoff(ng-click="!u.loggedIn || m.closeModal()", ng-show="m.modal")
  div#modal.modaloff(ng-class="{modalon: m.modal, modaloff: !m.modal, 'large-circle': m.modal == 'shortcuts' || m.modalLarge }", ng-click="!u.loggedIn || m.closeModal()")
    h1#title(ng-show="!u.loggedIn") nutmeg
    div#circle-holder
      a#close-modal(ng-click="m.closeModal()", ng-show="u.loggedIn") x
      div.circle(ng-click="$event.stopPropagation()")

        div(ng-show="m.modal == 'about'")
          h3 about
          p The <b>nutmeg</b> tree is any of several species of trees in genus <b>Myristica</b>. The nutmeg tree is important for two spices derived from the fruit: nutmeg and mace.

        div.shortcuts(ng-show="m.modal == 'shortcuts'")
          h3 shortcuts
          p.shortcut-modkey
            label modifier key: 
              input(type="text", ng-model="s.modEditing")
              | 
              span.tooltip(data-tooltip="This will prefix all of these shortcuts. Your options are:\n\n- 'ctrl'\n- 'shift'\n- 'alt'\n- 'option'\n- 'command' (only on Mac)\n- 'meta' (doesn't work?)\n- 'mod' ('ctrl' on a PC, 'command' on a Mac).\n\nYou can also combine them, e.g. 'ctrl+shift', or leave blank to control different shortcuts separately.")
                i.fa.fa-info-circle.fa-lg
          table
            thead
              tr
                th Action
                th Shortcut 
                  span.tooltip(data-tooltip="Simply type in a letter or symbol, or one of the following: backspace, tab, enter, return, capslock, esc, escape, space, pageup, pagedown, end, home, left, up, right, down, ins, del\n\nYou may include modifier keys in here too, e.g. 'shift+alt+backspace'")
                    i.fa.fa-info-circle
            tbody
              tr(ng-repeat="shortcut in s.shortcutsEditing", ng-show="!shortcut.overkill")
                td {{shortcut.name}} 
                  span.tooltip(ng-show="shortcut.description", ng-attr-data-tooltip="{{shortcut.description}}")
                    i.fa.fa-info-circle
                td
                  label
                    span(ng-show="s.modEditing") {{s.modEditing}}+
                    input(type="text", ng-model="shortcut.binding")
          p
            i Note: Different browsers and operating systems handle web site shortcuts differently. You might find that some combinations don't work.
          div.button-holder
            input(type="submit", value="cancel", ng-click="s.cancel()")
            input(type="submit", value="defaults", ng-click="s.revert()")
            input(type="submit", value="save", ng-click="s.save()")

        div.settings(ng-show="m.modal == 'settings'")
          h3 settings
          table
            tbody
              tr(ng-repeat="(setting, val) in c.configEditing", ng-show="!c.info[setting].overkill")
                td {{c.info[setting].humanName}} 
                  span.tooltip(ng-show="c.info[setting].description", ng-attr-data-tooltip="{{c.info[setting].description}}")
                    i.fa.fa-info-circle
                td
                  label
                    //- for ng-model we can't use `val`, see https://github.com/angular/angular.js/wiki/Understanding-Scopes
                    input(type="checkbox", ng-model="c.configEditing[setting]")
          div.button-holder
            input(type="submit", value="cancel", ng-click="c.cancel()")
            input(type="submit", value="defaults", ng-click="c.revert()")
            input(type="submit", value="save", ng-click="c.save()")

        div.feedback(ng-show="m.modal == 'feedback'")
          h3 feedback 
          //- if submitFeedback() returns true, clear fields and close modal
          form(ng-submit="submitFeedback(feedback, name) && ((feedback='') || (name='') || m.closeModal())")
            textarea(placeholder="Bug reports and suggestions are eagerly awaited. You'll hear from me personally.", ng-model="feedback")
            input(type="text", placeholder="name (optional)", ng-model="name")
            input(type="submit", value="submit")

        div(ng-show="m.modal == 'login'")
          h3 log in
          form(ng-submit="u.login(u.email, u.password);")
            input(type="email", placeholder="email", ng-model="u.email")
            input(type="password", placeholder="password", ng-model="u.password")
            input(type="submit", value="go", ng-hide="u.loading")
            p.loader(ng-show="u.loading")
              img(src="/img/loader-white.gif")
          p or 
            a(ng-click="m.modal='createaccount'") create an account

        div(ng-show="m.modal == 'createaccount'")
          form(ng-submit="u.createAccount(u.email, u.pass1, u.pass2);")
            h3 create an account
            input(type="email", placeholder="email", ng-model="u.email")
            input(type="password", placeholder="password", ng-model="u.pass1")
            input(type="password", placeholder="password again", ng-model="u.pass2")
            input(type="submit", value="go", ng-hide="u.loading")
            p.loader(ng-show="u.loading")
              img(src="/img/loader-white.gif")

        div(ng-show="m.modal == 'alert'")
          h3 {{m.modalTitle}}
          div.custom-body(ng-bind-html="m.modalBody")
          div.button-holder
            input(type="submit", value="{{m.modalOK}}", ng-click="m.closeModal()")


  div#nonmodal(ng-class="{modalon: m.modal, loggedout: !u.loggedIn}", ng-cloak)

    span#sync-status.tooltip(ng-class="digest.status", ng-attr-data-tooltip="Notes {{digest.status}}")
      i.cloud.fa.fa-cloud-upload

    div#menu
      ul
        li(ng-click="m.modal='about'") about
        li(ng-click="m.modal='feedback'") feedback
        li.incomplete export
        li.incomplete importer
        li(ng-click="m.modal='shortcuts'") shortcuts
        li(ng-click="m.modal='settings'") settings
        li.incomplete(ng-show="u.loggedIn") account
        li(ng-show="u.loggedIn", ng-click="u.auth.logout()") log out
        li(ng-show="!u.loggedIn", ng-click="m.modal='login'") log in
      img#menuimage(src="/img/nutmeg40h.png", alt="nutmeg")

    div#query.flex-container
      i.fa.fa-search(ng-click="q.focus()")
      span.tags
        span.tag(ng-repeat="tagId in q.tags", ng-click="q.toggleTag(tagId)")
          | {{t.tags[tagId].name}}
          span.hover-cover
            i.fa.fa-times
      input.search.flex.mousetrap(type="text", placeholder="search", ng-model="q.query", nm-query="q.query", tabindex=1, ng-focus="q.setupAutocomplete()")
      span.clear-query(ng-click="q.clear()")
        i.fa.fa-times

    //- can add .tab-hidden to hide right panel
    div#main

      div#left
        div#nuts
          div.header
            span#new-nut(ng-click="n.createNut({})")
              i.fa.fa-plus
            span.right
              span.count {{n.countShownNuts()}}
              span.sort
                label Sort by 
                  select#nut-sort-select(ng-change='n.assignSortVals(n.sortBy)', ng-model='n.sortBy', ng-options='o as o.name for o in n.sortOpts', tabindex=3)
                  | 
                i.fa.fa-refresh(ng-click='n.assignSortVals(n.sortBy); q.doQuery();')

          //- number of notes in search results, just need to figure out how to style:
          //- div {{q.showAll ? n.nuts.length : q.showNuts.length}}

          ul
            //- ng-show="nut && [...]" to avoid showing undefined nuts (happens when deleting nuts and resulting sparse arrays) and to filter by query
            //- NOTE: maybe should let n.assignSortVals() handle both, and ng-show="nut.sortVal"
            li.nut(ng-repeat="nut in n.nuts | orderBy:'sortVal' track by $index", ng-show="nut && (q.showAll || q.showNuts.indexOf(nut.id) !== -1)", id="nut-{{nut.id}}")
              div.tags
                span.tag(ng-repeat="tagId in nut.tags",  ng-click="q.toggleTag(tagId)")
                  | {{t.tags[tagId].name}}
                  span.tracker {{t.tags[tagId].tracker ? nut.id : ''}} 
                  span.delete(ng-click="n.removeTagIdFromNut(tagId, nut.id)")
                    i.fa.fa-times
                | 
                span.tag(ng-show="n.addingTag === nut.id")
                  form(ng-submit="n.addTagNameToNut(n.addTagName, nut, true); n.closeAddTagField(nut)")
                    input(type="text", ng-model="n.addTagName", ng-blur="n.closeAddTagField(nut); n.addTagHack()", nm-focus="n.addingTag === nut.id", placeholder="tag name")
                //-
                  HACK:
                  want to make sure user can hit the '+' to add the tag. but blur fires too quickly and won't not fire: http://stackoverflow.com/questions/20822978/blur-event-not-firing-on-label
                  a solution:
                  n.addTagHack() above sets n.addTagHackFieldJustBlurred to true for 50ms, then back to false
                  in this way we can tell, when hitting add-tag-to-nut, whether the field was just open
                  if it was, then do addTagNameToNut() (which returns false, setting n.addingTag to false)
                  if not, field's been closed for a while, so set n.addingTag to true to show it
                span.add-tag-to-nut(ng-click="throwaway = n.addTagHackFieldJustBlurred ? n.addTagNameToNut(n.addTagName, nut, true) : n.openAddTagField(nut);")
                  i.fa.fa-plus &nbsp;
              div.clear
              div.tawrapper
                div.icons
                  a.time.tooltip(ng-attr-data-tooltip='{{"created: " + (nut.created | date:"medium") + "\nmodified: " + (nut.modified | date:"medium")}}')
                    i.fa.fa-clock-o
                  a.delete(ng-click="n.deleteNut(nut)")
                    i.fa.fa-trash-o
                textarea.mousetrap(id="nut-{{nut.id}}-ta", ng-model="nut.body", ng-focus="n.nutFocus(nut)", ng-blur="n.nutBlur(nut)", ng-change="digest.status='unsynced'; n.autosizeNutById(nut.id)", tabindex=2)

      div#right
        div#tagContainer
          i.fa.fa-tags
          span#new-tag(ng-click="t.creatingTag=true;")
            i.fa.fa-plus
          br
          span.sort
            label Sort by 
              select(ng-model='t.sortBy', ng-options='o as o.name for o in t.sortOpts')
          input.moustrap(type="text", placeholder="search tags", ng-model="tagQuery")
          i.fa.fa-cogs.show-tag-options(ng-click="showOptions = showOptions ? false : true", ng-class="{on: showOptions}")

          ul#taglist(ng-class="{'show-options': showOptions}")
            li.tag.new-tag(ng-show="t.creatingTag")
              form(ng-submit="t.createTag({name: t.createTagName})")
                input(type="text", ng-model="t.createTagName", ng-blur="t.creatingTag=false; t.createTagName='';" nm-focus="t.creatingTag", placeholder="tag name")
            li.tag(ng-repeat="tag in t.tags | orderBy:t.sortBy.field:t.sortBy.rev track by $index", ng-click="q.toggleTag(tag.id)", ng-hide="!tag", ng-show="!tagQuery || tag.name.toLowerCase().indexOf(tagQuery.toLowerCase()) !== -1")
              | {{tag.name}} ({{tag.docs ? tag.docs.length : 0}}) 
              span.icons
                a.delete(ng-click="$event.stopPropagation(); t.deleteTag(tag)")
                  i.fa.fa-trash-o
                a.edit(ng-click="$event.stopPropagation(); t.editTag(tag)")
                  i.fa.fa-pencil
                a.toggle(ng-class="{on: tag.tracker}", ng-click="tag.tracker = tag.tracker ? null : true; t.tagUpdated(tag.id); $event.stopPropagation()")
                  i.fa.fa-eye
                a.toggle(ng-class="{on: tag.private}", ng-click="tag.private = tag.private ? null : true; t.tagUpdated(tag.id); $event.stopPropagation()")
                  i.fa.fa-lock
                  i.fa.fa-unlock-alt
