$mobile: 320px
$tablet-small: 480px
$tablet-large: 768px
$screen-small: 1024px
$screen-large: 1280px
$screen-huge: 1920px

// Sass doesn't yet support multi-line variable declartions <https://github.com/sass/sass/issues/216>
// Details about these settings at <http://susydocs.oddbird.net/en/latest/settings/>
$susy: ( columns: 12, gutters: 1/3, global-box-sizing: border-box/*, debug: (image: show, color: lightblue)*/ )

// Note - below used when trying out a static grid (making math using `gutter()` much easier). Worked out to 1269px instead of 1280px, but then making it responsive was a pain.
// $susy: ( math: static, columns: 12, column-width: 81px, gutters: 1/3, global-box-sizing: border-box, debug: (image: show, color: lightblue) )


*, *:before, *:after
  box-sizing: inherit

html
  box-sizing: border-box
  overflow: hidden // `main` is the element that scrolls

  @media (max-width: $tablet-large - 1px)
    // Except on mobile!
    overflow-y: visible


.is--initialized .app-outer
  +faded-in

#app-bg,
#app-bg-overlay
  position: fixed
  width: 100%
  height: 100%
  top: 0
  right: 0
  bottom: 0
  left: 0

#app-bg
  z-index: -2

  @if $bg-blur != 0
    filter: blur($bg-blur)

  background-color: $app-bg-gradient-bottom

  &.default
    background-image: linear-gradient(201deg, $app-bg-gradient-top, $app-bg-gradient-bottom)

  // for background images set by user in settings (@TODO/settings/bg Should be controllabe)
  background-position: center center
  background-repeat: no-repeat
  background-size: cover
  // background-attachment: fixed // not needed since the element is fixed, right? (and it breaks on iOS safari)

  // Default background on page load
  // @TODO/theme @TODO/soon Commenting all this out for now while light theme has no BG
  // background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-800x.jpg')
  // FOR NOW JUST THIS @TODO/hp needs to be responsively sized
  background-image: url('https://upload.wikimedia.org/wikipedia/commons/5/50/John_Martin_-_The_Great_Day_of_His_Wrath_-_Google_Art_Project.jpg')

  // @media (min-width: $tablet-large)
  //   background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-1280.jpg')
  // @media (min-width: $screen-large)
  //   background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-1920x.jpg')
  // @media (min-width: $screen-huge)
  //   background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-huge.jpg')

  // // Need to be more generous with retina-ish
  // @media only screen and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 120dpi)
  //   @media (min-width: $tablet-small)
  //     background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-1280x.jpg')
  //   @media (min-width: $tablet-large)
  //     background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-1920x.jpg')
  //   @media (min-width: $screen-large)
  //     background-image: url('https://s3.amazonaws.com/static.headsoak.com/img/bg/Hokusai_1760-1849_Ocean_waves-huge.jpg')

#app-bg-overlay
  z-index: -1
  background: $bg-overlay

  transition: background $transition-med
  .is--logged-out &
    background: $bg-overlay--logged-out

// This is our main grid container. gutter() and span() etc. should work as normal in here
main
  @extend .clearfix
  position: relative
  z-index: 1

  height: $full-height
  overflow-y: auto
  -webkit-overflow-scrolling: touch // enable momentum scrolling - only really relevant for very big touch devices cause on small touch devices <main> doesn't scroll, body does. @TODO/mobile @TODO/QA Test this on iOS Safari - css-tricks says it has to be overflow scroll, not auto

  // This is the container in the app that will scroll, so we'd like to have the scrollbar at the far right. So onstead of grid container with max width and margins on either side and gutter-width padding, here we try to pad it out to the full width of the viewport
  max-width: 100%
  padding-right: calc(50vw - #{$screen-large / 2} + #{gutter()} - 20px) // 20px to give room for scrollbar
  padding-left: calc(50vw - #{$screen-large / 2} + #{gutter()})

  @media (max-width: $screen-large)
    padding-right: gutter()
    padding-left: gutter()

  // @REMOVED/height
  // @media (max-width: $tablet-large - 1px)
  //   height: $mobile-full-height
  //   // padding: 0
    
  //   transition: height $transition-fast, transform $transition-fast

  //   .is--note-query-visible &
  //     height: $mobile-full-height--with-note-query
  //   .is--headerless &
  //     height: $mobile-full-height--headerless
  //     transform: translateY(-1 * $inner-header-height)
  //   .is--headerless.is--note-query-visible &
  //     height: $mobile-full-height--headerless-with-note-query

  @media (max-width: $tablet-large - 1px)
    // On mobile the main element does not scroll - html/body scroll
    height: auto
    overflow-y: visible

    margin-bottom: $mobile-nav-height
    transform: translateY($inner-header-height + $mobile-header-margin)
    transition: transform $transition-fast

    .route--note-route.is--note-query-visible &
      transform: translateY($inner-header-height + $mobile-header-margin + $mobile-note-query-height)
    .is--headerless &
      transform: translateY($mobile-header-margin)
    .is--headerless.route--note-route.is--note-query-visible &
      transform: translateY($mobile-header-margin + $mobile-note-query-height)

.app-wrapper
  pointer-events: none
  +fadeable
  +faded-out

  .is--initialized &
    pointer-events: all
    +faded-in
    transition-duration: $transition-slow

// This basically creates a version of the grid container but which is fixed. gutter() and span() etc. should work as normal in here.
.fixed-pane-wrapper
  position: fixed
  width: $screen-large
  max-width: 100%
  left: calc(50vw - #{$screen-large / 2})
  padding: 0 gutter()

  @media (max-width: $screen-large)
    left: 0

  // Otherwise the full width pane wrapper blocks scrolling and stuff - but any elements inside it should work normally
  pointer-events: none
  .fixed-pane-contents
    pointer-events: all
  

// This guy is hardcoded/inlined into index.html
.is--initialized .initial-loader.outer
  opacity: 0
  visibility: hidden

.initial-loader.inner
  left: auto
  color: $panel-text
