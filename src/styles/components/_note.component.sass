$note-header-height: 2.5rem

.note
  +card
  +box-shadowed // `card` mixin is box-shadowed only if panel bg is transparent, but we always want note to be box-shadowed
  background: transparent

  position: relative
  display: block
  border-bottom: 3px solid $note-bg
  transition: box-shadow $transition-gonzales, border $transition-med

  note-browser &
    margin-bottom: 1rem

  &,
  homepage .demo-container & // extra specificity for homepage to override route class that might be there e.g. if you're in route--browse and logout
    padding: 54px 10px 35px 1rem // More magic numbers (correctly vertically positions header and note actions). Left padding is needed in order for body input scrollbar to not be flush against body text nor flush against edge of note. These values (+ right padding on .body-input) are close enough on all browser widths it seems, especially since right edge of text isn't clear because of non-justified left-alignment.

  // @HACK @TODO/optimization The way padding and header work on here made it really hard to not have note-bg behind the header, so instead we're taking background off main .note element and hacking it in here while avoiding the header
  .note-bg
    z-index: -1
    position: absolute
    left: 0
    bottom: 0
    width: 100%
    height: calc(100% - #{$note-header-height})
    background-color: $note-bg

  .note-wrapper
    height: 100%

  .header,
  .note-actions
    position: absolute
    width: 100%

  .note-actions
    white-space: nowrap
    overflow: hidden
    height: 30px

  .header
    top: 0
    left: 0

  .tags
    overflow: hidden
    width: 100%
    max-height: $note-header-height
    padding: 0.25rem 0.5rem 0.5rem
    // background-color: transparent
    background-color: $panel-bg
    +box-shadowed-small-light
    border-bottom: 2px solid transparent

    // @TODO/animation Animation looks weird cause either max-height has to be huge or be smaller but scrollable. If scrollable then scroll bar shows during animation. For now doing max-height none and no animatino
    // transition: max-height $transition-fast, padding $transition-fast, border-color $transition-fast

    tag
      cursor: pointer

  .tag-like
    cursor: pointer

    // @TODO/ece Right now hover just makes + icon change color. Should it instead flip bg color and text color like hover on tag in tag browser?
    &:hover .fa
      color: $icon-hover

  &.is--adding-tag .tag-like
    cursor: default

    // So hovering over the whole tag doesn't highlight the icon
    &:hover .fa
      color: $icon-color
    // You have to hover over the icon itself
    .new-tag-button:hover .fa
      color: $icon-hover

  .new-tag-input
    +tag-face
    width: 0
    background: none
    padding: 0

    transition: width $transition-fast, padding $transition-fast

  &.is--adding-tag .new-tag-input
    width: 100px
    padding: 0 2px

  .new-tag-button
    +icon-button
    cursor: pointer

    .fa
      +small

  .note-id
    cursor: default

  .expand-tags
    +icon-button
    display: none
    position: absolute
    top: 0
    right: 0
    padding-bottom: 5px // magic number that makes this the full height of the tags header, for increasing click target size

    .tag-like
      color: $icon-color
      margin-left: 5px // matches tag margins (which exclude left margin) for the purpose of increasing click target size of parent
    &:hover .tag-like
      color: $icon-hover

    .go-up,
    .go-down
      +fadeable

    .go-down
      +faded-in
      position: relative
      top: 4px

    .go-up
      +faded-out
      position: absolute
      top: 14px

  &.has--tag-overflow
    .tags
      padding-right: 30px // to make room for .expand-tags
      transition: background-color $transition-fast, border $transition-fast
    .expand-tags
      display: inline-block

  modal &, // @TODO/hp Do we want highlighted bottom border on home page note, or only if focused like normal? What about for demo that's typing?
  &.is--adding-tag,
  &.is--focused
    box-shadow: 0px 6px 10px 5px $shadow-color
    border-bottom-color: $form-focused-stroke

  &.is--expanded
    .expand-tags
      .go-down
        +faded-out
      .go-up
        +faded-in

    .tags
      +dropdown-menu
      // overflow-y: auto
      // max-height: 200px // should be more than enough, and in case not, we can scroll
      // @TODO/animation Just snapping to this for now, see note on .tags above
      max-height: none
      padding-bottom: 10px


  .body-input
    resize: none
    width: 100%
    overflow-y: auto // goes with max-height being full height now?
    // max-height: 133px // 6.5 lines of text (so that clipping is obvious)
    max-height: calc(#{$full-height-nestable} - 100px) // magic numbers - 100px is about the vertical padding of note element plus a bit to spare
    padding: 2px 20px 2px 2px // see note about right padding in base .note styles // @NOTE if right padding changes here it must also be changed for .body-input overrides in .route--list
    border: 0
    outline: none
    white-space: pre-wrap
    color: $note-text

    transition: min-height $transition-fast, max-height $transition-fast, padding $transition-fast
    
    @media (max-width: $tablet-large - 1px)
      // @TODO/soon Is this the right behavior on mobile?
      // @TODO/soon I think these need to be nestable, but some browsers manage without, I think?
      max-height: calc(#{$mobile-full-height} - 100px)
      .route--note-route.is--note-query-visible &
        max-height: calc(#{$mobile-full-height--with-note-query} - 100px)
      .is--headerless &
        max-height: calc(#{$mobile-full-height--headerless} - 100px)
      .is--headerless.route--note-route.is--note-query-visible &
        max-height: calc(#{$mobile-full-height--headerless-with-note-query} - 100px)

  // @REMOVED and max-height changed above
  // @media (min-width: $tablet-large)
  //   &.is--adding-tag .body-input,
  //   &.is--focused .body-input
  //     max-height: calc(#{$full-height-nestable} - 100px) // magic numbers - 100px is about the vertical padding of note element plus a bit to spare

  .route--list &,
  .route--browse &
    // Magic numbers just like in normal `note` padding. Top padding should mirror distance from bottom of tags header to tag text itself.
    padding-top: 46px
    padding-bottom: 32px

    .note-actions
      bottom: -2px

  .route--browse &
    .body-input
      max-height: none
      height: 95px

  .route--list &
    margin-bottom: 0.5rem
    padding-bottom: 0.5rem

    .body-input
      +single-line-truncate // @TODO/soon @TODO/polish On chrome with the spellcheck issue, `white-space: nowrap` here is one thing that makes or breaks red line at end of everything if there's *any* wrong spellcheck in body

      // @TODO/style @TODO/polish Would be nice if we could replace <br>s with some character orsomething. For now just limit with height instead. See also in _forms.sass
      // +single-line-contenteditable
      // //  @TODO/hack This should come in from `single-line-contenteditable`
      // br
      //   display: none
      //   &:after// not in single-line-contenteditable, but maybe it should be?
      // *
      //   display: inline
      //   white-space: nowrap

      height: ($base-line-height-multiple + 0.05) * 1rem // seems like if we don't add a little, then when you focus it gets that much bigger
      min-height: ($base-line-height-multiple + 0.05) * 1rem // for animation for small notes

      padding-right: 50px // magic number to make room for up to two active note action icons @TODO/polish ideally this would depend on exact number of active icons (which in the future could be 3 - shared, private, archived/pinned)

    .note-actions
      width: auto
      right: 0
      bottom: 2px
      left: auto

    @media (min-width: $tablet-large)
      &:hover
        .body-input
          overflow: hidden // repeat of normal `.route--list .body-input` but added here too for specificity
          padding-right: 155px // magic number to make room for ALL note-actions

      &.is--adding-tag,
      &.is--focused
        .body-input
          overflow-y: auto
          white-space: pre-wrap

          // @TODO/polish Cause we set max-height to none not a specific value, it won't animate the expansion without some JS. However it *does* animate expanding short notes with min-height, and animates a bit when the thing is being unfocused. @TODO/ece Should it be all or nothing?
          height: auto

          // Back to normal since when expanded, we make room for note actions at the bottom
          padding-right: 20px // @NOTE This reflects default value defined for `.note .body-input`

        &:not(.is--textless)
          padding-bottom: 2rem // make room for note actions at the bottom

          .body-input
            min-height: 95px
        


  .note-actions
    height: 30px
    left: 0;
    bottom: 2px
    padding: 0 10px

    text-align: right
    font-size: 20px

  .note-action
    +note-icon-button

    position: relative

    &:last-child
      margin-right: 0

  .note-action--open,
  .note-action--close
    float: left

  .note-action--close
    // Big-ass click target to make it easy to get out of modal (small on top though since it's near body text)
    position: relative
    top: -0.25rem
    left: -1rem
    padding: 0.25rem 1rem 0.5rem

  .note-action--private
    .locked
      display: none

    &:hover,
    &.is--active
      .locked
        display: inline-block
      .unlocked
        display: none

    &.is--active:hover
      .locked
        display: none
      .unlocked
        display: inline-block

  // .explore
  //   z-index: 1
  //   position: absolute
  //   top: 100%
  //   left: 5px
  //   width: calc(100% - 10px)
  //   height: 0
  //   padding: 0 15px
  //   overflow-y: auto
  //   background: fade-out($primary-color, 0.05)
  //   color: $primary-color-contrast

  //   transition: opacity $transition-fast, visibility $transition-fast, max-height $transition-fast ease-in, padding $transition-fast ease-out
  //   +faded-out

  // &.show--explore
  //   .explore
  //     +faded-in
  //     height: calc(100vh - #{$header-height} - 100% - 15px) // 100% to get note height, 15px to give a bit of breathing room
  //     padding: 15px

  //     @media (max-height: 600px)
  //       height: 300px


  // slide-fade-in effect
  note-browser &
    .note-action .fa
      +faded-out
      width: 0

    @media (min-width: $tablet-large)
      &.is--adding-tag,
      &.is--focused,
      &:hover
        .note-action .fa
          +faded-in
          width: 1.3em // just copied from what font-awesome gives to fixed width icons
    // On mobile we don't have the above effect in note browser - we hide all note actions (except active ones) all the time unless they open the note up in the modal

    .note-action.is--active,
      .fa
        +faded-in
        width: 1.3em


    // Changed with max-height changes
    .route--browse &
      .body-input
        overflow: hidden

    @media (min-width: $tablet-large)
      &.is--focused,
      &:hover
        .body-input
          overflow-y: auto

        // Need to add scrollbar if needed, but don't want text to reflow with different line breaks when scrollbar takes up some width. This hack works on Chrome on Linux, needs browser testing (however even if it's a bit off and sometimes causes reflow, well that's the normal behavior, so as long as it's not that much worse...)
        // @REMOVED/note text overflow Turns out the assumption of 12px scrollbar (and/or the general method) is not x-browser friendly, so disabling - we could use <https://davidwalsh.name/detect-scrollbar-width> to work out scrollbar width and set up a CSS class at runtime
        // &.is--text-overflowing .body-input
        //   overflow-y: scroll // force this otherwise sometimes the widening of the text will remove the need for a scroll bar and then it just inexplicably gets bigger!
        //   width: calc(100% + 12px)
        //   padding-right: 8px // 12px less than normal padding
        //   margin-left: -12px
        //   padding-left: 14px // 12px more than normal padding


  .route--scroll &
    .body-input
      padding-left: 10px

      +susy-breakpoint($screen-small, $susy)
        // These achieve a "max width" of 600px while filling the rest with padding. Additionally, it's aligned a little towards the left from centered
        padding-right: calc(75% - 450px)
        padding-left: calc(25% - 150px)

    // @REMOVED/note text overflow Along with bit above
    // &.is--focused,
    // &:hover
    //   &.is--text-overflowing .body-input
    //     padding-left: 22px // 12px more than normal

    //     +susy-breakpoint($screen-small, $susy)
    //       padding-right: calc(75% - 450px - 12px)
    //       padding-left: calc(25% - 150px + 12px)

  modal .is--note &
    // @TODO/ece What do you think of this? Random but looks okay? Also the body input padding and mobile sizing (should it be the same as route--scroll?)
    height: 90vh
    padding-top: 4rem
    padding-bottom: 3rem

    .body-input
      overflow-y: auto
      height: 100%
      max-height: none !important // override focus state
      padding-left: 2rem
      padding-right: 2rem

    @media (max-width: $tablet-large - 1px)
      // @TODO/mobile @TODO/polish Possibly a better version would still show header (with back button) and maybe nav footer (scrolling away as normal), and then doing away with modal backdrop entirely (and going full width)
      height: 97vh
      padding-top: 3.5rem
      padding-bottom: 2.5rem

      .is--ios &
        // Unlike Chrome, which updates vh units based on whether browser bar is visible or not, iOS Safari calculates vh from dimensions as if browser bar is never there. This means that we need some more space on iOS Safari, in case browser bar is there. @TODO/polish Chrome is updating their behavior (<https://bugs.chromium.org/p/chromium/issues/detail?id=428132>) to match iOS here - once that update is widespread we should make this the default behavior.
        height: calc(100vh - 75px)

      .body-input
        padding-left: 0.5rem
        padding-right: 0.5rem

modal .is--note .modal-close
  display: none


// This actually gets shunted into ModalComponent but let's style it here
// @TODO/ece What do you think of this whole thing?
.explore-note
  .time-chunk
    display: inline-block
    width: 50%
    min-width: 120px // magic number that looks about right for room for splitting date/time onto two lines but no more
    margin-bottom: 2rem

  h5
    +setting-heading
    margin: 0.5rem 0
