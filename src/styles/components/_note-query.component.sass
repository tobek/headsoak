// see also styles for .query-controls in _forms.sass

note-query
  display: flex
  align-items: center

  padding: 2px 15px 1px // top padding should match .private-mode-indicator top padding

  +input-underline
  &.is--focused
    +input-underline-active

  .text-input
    border: 0
    padding: 2px 0 0 // nudge down to align nicely with bottom border and tag chiclet

  // Active/inactive styles
  @media (min-width: $tablet-large)
    .setting--minimalistHeader &
      transition: color $transition-fast, border-color $transition-fast
      border-bottom-color: transparent
      color: transparent

      .count,
      .sort-dropdown,
      .text-input
        transition: opacity $transition-fast
        opacity: 0

      &:hover,
      &.is--active
        +input-underline
        color: $panel-text

        .count,
        .sort-dropdown,
        .text-input
          opacity: 1
  // End active/inactive styles

  .tags,
  .query-controls
    flex: 1
    white-space: nowrap

  .tags:empty
    flex: 0.001

  tag
    position: relative
    margin-top: -10px // @TODO Magic number to make note-query bottom border not move down when tags are visible
    margin-bottom: 0

    .name-wrapper
      max-width: 100px

    &:hover .name-wrapper
      white-space: nowrap !important // meh, overriding detailed rules for tag component
      max-width: none

  .text-input
    flex: 5

  .control-icon
    +h3

  .sort-dropdown
    width: 150px;
    margin-right: 4px


  @media (max-width: $tablet-large - 1px)
    .tags
      margin-left: -8px
      &:empty
        margin-left: 0

    .text-input
      min-width: 0

    .sort-dropdown
      margin-right: 0
      margin-left: -95px // Magic number - this is basically "width of longest item in menu" - "width of 'sort' text" - we replace the selected menu item with "sort" and align right, and here we want to push whatever's on the left of it over enough to sit next to "sort".

      .ui-select-toggle
        // Replace whatever the selected item is with simply the text "sort"
        .ui-select-match-text
          display: none

        &:before
          content: 'Sort'

          // dropdown library makes this a .btn so we need to override the styles we have for loading button
          font-family: inherit
          visibility: visible
          opacity: 1
          font-size: inherit
          position: static
          display: inline

      .ui-select-match
        text-align: right

      // @TODO/styles @TODO/polish The above changes mean that there's no way to see what the current sort is. When you open the dropdown, the highlighted item is determined only by the hover, by the component adding a `.active` class to the last hovered item. On mobile, it just highlights the first one! Doesn't look like there's any class to identify selected option. Fix would be to run some JS after opening (a recent commit adds an `(opened)` angular output) and manually set up some class.
      // FOR NOW: Hiding the active style altogether, unless they're *actually* hovering
      .ui-select-choices.dropdown-menu .ui-select-choices-row // extra specificity to override their styles
        &.active .dropdown-item
          +dropdown-menu-link-unhovered
        &.active:hover .dropdown-item
          +dropdown-menu-link-hover

    .query-controls
      flex: 0.1

    // Search icon is always in header, and we want clear always visible in note query so you can close out
    .control-icon--search
      display: none
    .control-icon--clear
      display: inline

    .query-info
      position: absolute
      right: 0
      bottom: -1.5rem